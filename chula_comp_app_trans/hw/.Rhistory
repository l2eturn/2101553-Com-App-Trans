getwd()
if(!require(readxl)){install.packages("readxl")}
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
devtools::install_github("r-lib/conflicted")
devtools::install_github("r-lib/conflicted")
devtools::install_github("r-lib/conflicted")
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
# Step 1
friend_ages <- c(27, 35, 25, 29, 32, 26, 28, 31)
print(friend_ages)
# Step 2
names(friend_ages) <- my_friends
print(friend_ages)
are_married <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)
print(are_married)
are_married <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)
print(are_married)
print(my_friends[!are_married])
print(friend_ages[friend_ages > mean(friend_ages)])
friend_sex <- factor(c("female", "male", "female", "male", "female", "male", "male", "male"),levels = c("male", "female"))
print(friend_sex)
# Step 7
print(table(friend_sex))
friends_data <- data.frame(
Name = my_friends,
Age = friend_ages,
Sex = friend_sex,
Status = ifelse(are_married, "Married", "Single")
)
friends_data <- data.frame(Name = my_friends,Age = friend_ages,Sex = friend_sex,Status = ifelse(are_married, "Married", "Single")
)
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
# Step 1
friend_ages <- c(27, 35, 25, 29, 32, 26, 28, 31)
print(friend_ages)
# Step 2
names(friend_ages) <- my_friends
print(friend_ages)
# Step 3
are_married <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)
print(are_married)
# Step 4
print(my_friends[!are_married])
# Step 5
print(friend_ages[friend_ages > mean(friend_ages)])
# Step 6
friend_sex <- factor(c("female", "male", "female", "male", "female", "male", "male", "male"),levels = c("male", "female"))
print(friend_sex)
# Step 7
print(table(friend_sex))
# Step 8
friends_data <- data.frame(Name = my_friends,Age = friend_ages,Sex = friend_sex,Status = ifelse(are_married, "Married", "Single")
)
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
# Step 1
friend_ages <- c(27, 35, 25, 29, 32, 26, 28, 31)
print(friend_ages)
# Step 2
names(friend_ages) <- my_friends
print(friend_ages)
# Step 3
are_married <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)
print(are_married)
# Step 4
print(my_friends[!are_married])
# Step 5
print(friend_ages[friend_ages > mean(friend_ages)])
# Step 6
friend_sex <- factor(c("female", "male", "female", "male", "female", "male", "male", "male"),levels = c("male", "female"))
print(friend_sex)
# Step 7
print(table(friend_sex))
# Step 8
friends_data <- data.frame(
Name = my_friends,
Age = friend_ages,
Sex = friend_sex,
Status = ifelse(are_married, "Married", "Single")
)
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
# Step 1
friend_ages <- c(27, 35, 25, 29, 32, 26, 28, 31)
print(friend_ages)
# Step 2
names(friend_ages) <- my_friends
print(friend_ages)
# Step 3
are_married <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)
print(are_married)
# Step 4
print(my_friends[!are_married])
# Step 5
print(friend_ages[friend_ages > mean(friend_ages)])
# Step 6
friend_sex <- factor(c("female", "male", "female", "male", "female", "male", "male", "male"),levels = c("male", "female"))
print(friend_sex)
# Step 7
print(table(friend_sex))
# Step 8
friends_data <- data.frame(
Name = my_friends,
Age = friend_ages,
Sex = friend_sex,
Status = ifelse(are_married, "Married", "Single")
)
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
# Step 1
print(my_friends)
# Step 2
third_friend <- my_friends[3]
print(third_friend)
# Step 3
number_of_friends <- length(my_friends)
print(number_of_friends)
# Step 4
my_friends <- c(my_friends, "Grace")
print(my_friends)
# Step 5
my_friends <- my_friends[-2]
print(my_friends)
# Step 6
sorted_friends <- sort(my_friends)
print(sorted_friends)
# Step 7
three_letter_friends <- my_friends[nchar(my_friends) == 3]
print(three_letter_friends)
# Step 8
is_eve_present <- "Eve" %in% my_friends
print(is_eve_present)
# Step 9
first_two <- my_friends[1:2]
print(first_two)
# Step 10
my_friends[my_friends == "Dan"] <- "Daniel"
print(my_friends)
# Check current working directory
getwd()
# Set working directory
"C:/Users/Terxzera/Desktop/R_lang/chula_comp_app_trans/hw"
# Call required packages, ex. "readxl", "tidyverse"
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
# Check current working directory
getwd()
# Set working directory
"C:/Users/Terxzera/Desktop/R_lang/chula_comp_app_trans/hw"
# Call required packages, ex. "readxl", "tidyverse"
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank")
# Step 1
print(my_friends)
# Step 2
third_friend <- my_friends[3]
print(third_friend)
# Step 3
number_of_friends <- length(my_friends)
print(number_of_friends)
# Step 4
my_friends <- c(my_friends, "Grace")
print(my_friends)
# Step 5
my_friends <- my_friends[-2]
print(my_friends)
# Step 6
sorted_friends <- sort(my_friends)
print(sorted_friends)
# Step 7
three_letter_friends <- my_friends[nchar(my_friends) == 3]
print(three_letter_friends)
# Step 8
is_eve_present <- "Eve" %in% my_friends
print(is_eve_present)
# Step 9
first_two <- my_friends[1:2]
print(first_two)
# Step 10
my_friends[my_friends == "Dan"] <- "Daniel"
print(my_friends)
# ข้อมูลเริ่มต้น
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank", "George", "Hank")
# Step 1: สร้าง vector ชื่อ friend_ages
friend_ages <- c(27, 35, 25, 29, 32, 26, 28, 31)
print(friend_ages)
# [1] 27 35 25 29 32 26 28 31
---
# Step 2: กำหนด label (ชื่อ) ให้กับ vector friend_ages
names(friend_ages) <- my_friends
# ข้อมูลเริ่มต้น
my_friends <- c("Ann", "Bob", "Carol", "Dan", "Eve", "Frank", "George", "Hank")
# Step 1
friend_ages <- c(27, 35, 25, 29, 32, 26, 28, 31)
print(friend_ages)
# Step 2
names(friend_ages) <- my_friends
print(friend_ages)
# Step 3
are_married <- c(TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE, FALSE)
print(are_married)
# Step 4
print(my_friends[!are_married])
# Step กว่าอายุเฉลี่ย
print(friend_ages[friend_ages > mean(friend_ages)])
#   Bob   Eve  Hank
#    35    32    31
# Step 6
friend_sex <- factor(c("female", "male", "female", "male", "female", "male", "male", "male"),levels = c("male", "female"))
print(friend_sex)
# Step 7
print(table(friend_sex))
# friend_sex
#   male female
#      5      3
# Step 8
friends_data <- data.frame(
Name = my_friends,
Age = friend_ages,
Sex = friend_sex,
Status = ifelse(are_married, "Married", "Single")
)
print(friends_data)
# Step 9
friends_data$Height <- c(165, 180, 162, 175, 169, 172, 168, 185)
print(friends_data)
# Step 10
mean_data <- aggregate(cbind(Age, Height) ~ Sex, data = friends_data, FUN = mean)
print(mean_data)
# Check current working directory
getwd()
# Set working directory
# Call required packages, ex. "readxl", "tidyverse"
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(gapminder)){install.packages("gapminder")}
getwd()
# Check current working directory
getwd()
# Set working directory
"C:/Users/Terxzera/Desktop/R_lang/chula_comp_app_trans/hw"
# Call required packages, ex. "readxl", "tidyverse"
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(gapminder)){install.packages("gapminder")}
if(!require(readxl)){install.packages("readxl")}
if(!require(tidyverse)){install.packages("tidyverse")}
if(!require(gapminder)){install.packages("gapminder")}
# ติดตั้งและเรียกใช้ library ที่จำเป็น
# Step 1
gap_data <- gapminder
glimpse(gap_data)
# Step 2
asia_2002_data <- gap_data %>%
filter(continent == "Asia" & year == 2002)
n_countries <- nrow(asia_2002_data)
lifeExp_med <- median(asia_2002_data$lifeExp)
print(paste("จำนวนประเทศในเอเซีย:", n_countries))
print(paste("ค่ามัธยฐานอายุคาดเฉลี่ย:", lifeExp_med))
# Step 3
gdp_summary_2002 <- gap_data %>%
filter(year == 2002) %>%
mutate(Total_GDP = pop * gdpPercap) %>%
group_by(continent) %>%
summarise(
Total_Pop = sum(pop),
Total_GDP = sum(Total_GDP)
) %>%
arrange(desc(Total_GDP))
print(gdp_summary_2002)
# Step 4
gdp_wide <- gap_data %>%
filter(country %in% c("China", "Japan", "Korea, Rep."), year >= 1980) %>%
select(year, country, gdpPercap) %>%
pivot_wider(names_from = country, values_from = gdpPercap)
print(gdp_wide)
# Step 5
gap_data <- gap_data %>%
mutate(continent.f = fct_rev(fct_infreq(continent)))
print(levels(gap_data$continent.f))
# Step 6
ggplot(gap_data, aes(x = continent.f, fill = continent.f)) +
geom_bar(show.legend = FALSE) +
scale_fill_brewer(palette = "Spectral") +
labs(y = "number of countries", x = NULL)
